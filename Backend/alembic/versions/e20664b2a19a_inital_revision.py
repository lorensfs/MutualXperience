"""inital revision

Revision ID: e20664b2a19a
Revises: 
Create Date: 2025-05-09 17:25:33.577882

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel as sa


# revision identifiers, used by Alembic.
revision: str = 'e20664b2a19a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('identification_number', sa.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('first_name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('middle_name', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('second_last_name', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('marital_status', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_politically_exposed', sa.Boolean(), nullable=False),
    sa.Column('is_high_risk_business', sa.Boolean(), nullable=False),
    sa.Column('has_us_residency', sa.Boolean(), nullable=False),
    sa.Column('occupation_type', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('employer_name', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('job_title', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('employment_start_date', sa.DateTime(), nullable=True),
    sa.Column('monthly_gross_income', sa.Float(), nullable=False),
    sa.Column('home_address', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('work_address', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_users_identification_number'), 'users', ['identification_number'], unique=False)
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.create_table('beneficiaries',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('identification_number', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('middle_name', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('second_last_name', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('relationship', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('wants_to_add_another', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_beneficiaries_uuid'), 'beneficiaries', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_beneficiaries_uuid'), table_name='beneficiaries')
    op.drop_table('beneficiaries')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_index(op.f('ix_users_identification_number'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
