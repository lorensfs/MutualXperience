[project]
name = "app"
version = "0.1.0"
description = "App for Mutual Hackathon 5/5/2025"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi[standard]>=0.115.12",
    "passlib[bcrypt]>=1.7.4",
    "pydantic>=2.11.4",
    "pydantic-settings>=2.9.1",
    "pyjwt>=2.10.1",
    "sqlmodel>=0.0.24",
    "tenacity>=9.1.2",
]

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.8",
    "types-passlib>=1.7.7.20250408",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py312"

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

skip-magic-trailing-comma = false

line-ending = "auto"

docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
