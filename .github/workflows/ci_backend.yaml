name: CI Checks Backend

on:
  pull_request:
    branches:
      - main

jobs:
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout Code
        uses: actions/checkout@v4

      - name: Setup | Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "./Backend/.python-version"

      - name: Setup | Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          version: "latest"

      - name: Setup | Install Project Dependencies
        run: |
          cd ./Backend
          uv sync --only-dev

      - name: Setup | Activate Virtual Environment
        run: |
          ./Backend/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Action | Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: |
            **/*.md

      - name: Action | Lint
        run: ruff check --fix ./Backend/app ./Backend/app/tests

      - name: Action | Sort Imports
        run: ruff check --select I --fix ./Backend/app ./Backend/app/tests

      - name: Action | Format Code
        run: ruff format ./Backend/app ./Backend/app/tests

      - name: Action | Check Static Typing
        run: mypy --strict --explicit-package-bases ./Backend/app ./Backend/app/tests

      - name: Action | Build Coverage File
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=./Backend/app ./Backend/app/tests | tee pytest-coverage.txt

      - name: Action | Pytest Coverage Comment
        if: ${{github.event_name == 'pull_request'}}
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
